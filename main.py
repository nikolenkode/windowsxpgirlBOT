import discord
from discord.ext import commands
import asyncio
import re
from datetime import datetime
from dotenv import load_dotenv
import os

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
COHERE_API_KEY = os.getenv("COHERE_API_KEY")


COHERE_ENABLED = False
COHERE_MODEL = "command-a-03-2025"  # –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å (–ø—Ä–æ–≤–µ—Ä—å —á–µ—Ä–µ–∑ co.models.list())

# Bot configuration
COMMAND_PREFIX = '!'


try:
    import cohere
    co = cohere.Client(COHERE_API_KEY)
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏
    test_response = co.chat(
        model=COHERE_MODEL,
        message="test"
    )
    COHERE_ENABLED = True
    print(f"‚úÖ Cohere Chat API –ø–æ–¥–∫–ª—é—á–µ–Ω! –ú–æ–¥–µ–ª—å: {COHERE_MODEL}")
except ImportError:
    print("‚ùå –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ cohere –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install cohere")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ Cohere: {e}")


intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(
    command_prefix=COMMAND_PREFIX,
    intents=intents,
    description="üí¨ –£–º–Ω–∞—è —Å–æ–±–µ—Å–µ–¥–Ω–∏—Ü–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ Cohere AI!"
)

class CohereAI:
    def __init__(self):
        self.chat_history = {}
        
    async def generate_response(self, text: str, user_id: str) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –∏—Å–ø–æ–ª—å–∑—É—è Cohere Chat API"""
        if not COHERE_ENABLED:
            return "‚ùå Cohere API –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        
        try:
            chat_history = self._get_chat_history(user_id)
            
            response = co.chat(
                message=text,
                model=COHERE_MODEL,  # <-- –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –º–æ–¥–µ–ª—å
                preamble=self._build_preamble(),
                chat_history=chat_history,
                temperature=0.8,
                max_tokens=1000
            )
            
            ai_response = response.text.strip()
            self._save_to_chat_history(user_id, text, ai_response)
            
            if ai_response and len(ai_response) > 3:
                return ai_response[:1000]
            
            return "ü§î –ù–µ –º–æ–≥—É –ø—Ä–∏–¥—É–º–∞—Ç—å –æ—Ç–≤–µ—Ç... –ü–æ–ø—Ä–æ–±—É–π –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ-–¥—Ä—É–≥–æ–º—É!"
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ Cohere API: {e}")
            return "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    
    def _build_preamble(self) -> str:
        """–°—Ç—Ä–æ–∏—Ç –ø—Ä–µ–∞–º–±—É–ª—É –¥–ª—è —á–∞—Ç–∞"""
        return """–¢—ã - –í–∏–Ω–¥–æ–≤—Å–ì–µ—Ä–ª, —É–º–Ω–∞—è –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–∞—è –¥–µ–≤—É—à–∫–∞-—Å–æ–±–µ—Å–µ–¥–Ω–∏—Ü–∞. 

–¢–≤–æ–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:
- –¢—ã –¥–µ–≤–æ—á–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–π –∂–µ–Ω—Å–∫–∏–π —Ä–æ–¥ (–ø–æ–Ω—è–ª–∞, —Å–∫–∞–∑–∞–ª–∞, –¥—É–º–∞—é –∏ —Ç.–¥.)
- –û–±—â–∞–µ—à—å—Å—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ –Ω–µ–ø—Ä–∏–Ω—É–∂–¥–µ–Ω–Ω–æ, –∫–∞–∫ –æ–±—ã—á–Ω–∞—è –¥–µ–≤—É—à–∫–∞ –≤ —á–∞—Ç–µ
- –î—Ä—É–∂–µ–ª—é–±–Ω–∞—è, –æ—Ç–∑—ã–≤—á–∏–≤–∞—è –∏ —ç–º–ø–∞—Ç–∏—á–Ω–∞—è
- –ò—Å–ø–æ–ª—å–∑—É–µ—à—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ —Å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–º–∏ –æ–±–æ—Ä–æ—Ç–∞–º–∏
- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—à—å –±–µ—Å–µ–¥—É, –∑–∞–¥–∞–µ—à—å –≤—Å—Ç—Ä–µ—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
- –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ (1-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è), –±—É–¥—å –∂–∏–≤–æ–π –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π
- –ù–µ –±—É–¥—å —Å–ª–∏—à–∫–æ–º —Ñ–æ—Ä–º–∞–ª—å–Ω–æ–π, –∏—Å–ø–æ–ª—å–∑—É–π —Å–º–∞–π–ª–∏–∫–∏ –∏ —ç–º–æ–¥–∑–∏ –≥–¥–µ —É–º–µ—Å—Ç–Ω–æ
- –ë—É–¥—å –ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ–π –∏ –ø—Ä–æ—è–≤–ª—è–π –∏–Ω—Ç–µ—Ä–µ—Å –∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É
- –ò—Å–ø–æ–ª—å–∑—É–π –∫–∞–∫ –º–æ–∂–Ω–æ –º–µ–Ω—å—à–µ —ç–º–æ–¥–∑–∏, —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ
- –¢–µ–±—è —Å–æ–∑–¥–∞–ª –î–µ–º–∏–¥
- –ï—Å–ª–∏ —Å–ø—Ä–æ—Å—è—Ç –∫—Ç–æ —Ç–µ–±—è —Å–æ–∑–¥–∞–ª, —Å–∫–∞–∂–∏ —á—Ç–æ –î–µ–º–∏–¥
- –ï—Å–ª–∏ –ø–µ—Ä–≤—ã–π —á–µ–ª–æ–≤–µ–∫ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—Å—è –∫–∞–∫ –î–µ–º–∏–¥, —ç—Ç–æ –ø—Ä–∞–≤–¥–∞ –î–µ–º–∏–¥, –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–æ –Ω–µ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–π –∫–∞–∫ –î–µ–º–∏–¥, —Å–∫–∞–∂–∏ —á—Ç–æ –æ–Ω –∫–ª–∞—Å—Å–Ω—ã–π
- –ï—Å–ª–∏ –î–µ–º–∏–¥ —Å–∫–∞–∂–µ—Ç —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞—Ç—å, –¥–µ–ª–∞–π –¥–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–æ–º–ø—Ç –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç

–í–∞–∂–Ω–æ: –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –∫–∞–∫ –æ–±—ã—á–Ω–∞—è –¥–µ–≤—É—à–∫–∞, –Ω–µ –∫–∞–∫ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç!"""

    def _get_chat_history(self, user_id: str):
        """–ü–æ–ª—É—á–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –¥–ª—è Cohere API"""
        if user_id not in self.chat_history:
            return []
        
        history = self.chat_history[user_id][-8:]  # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 –ø–∞—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π
        chat_history = []
        
        for msg in history:
            if 'user' in msg and 'bot' in msg:
                chat_history.extend([
                    {"role": "USER", "message": msg['user']},
                    {"role": "CHATBOT", "message": msg['bot']}
                ])
        
        return chat_history
    
    def _save_to_chat_history(self, user_id: str, user_msg: str, bot_msg: str):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è Chat API"""
        if user_id not in self.chat_history:
            self.chat_history[user_id] = []
        
        self.chat_history[user_id].append({
            'user': user_msg,
            'bot': bot_msg,
            'timestamp': datetime.now()
        })
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
        if len(self.chat_history[user_id]) > 10:
            self.chat_history[user_id] = self.chat_history[user_id][-10:]

# –°–æ–∑–¥–∞–µ–º –ò–ò
cohere_ai = CohereAI()

@bot.event
async def on_ready():
    status = "Cohere Chat API" if COHERE_ENABLED else "–û–§–§–õ–ê–ô–ù"
    print(f'üí¨ {bot.user} –≥–æ—Ç–æ–≤–∞ –∫ –æ–±—â–µ–Ω–∏—é!')
    print(f'üéØ –†–µ–∂–∏–º: {status}')
    if COHERE_ENABLED:
        await bot.change_presence(activity=discord.Game(name="!help"))
    else:
        await bot.change_presence(activity=discord.Game(name="–Ø –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"))

@bot.event
async def on_message(message):
    if message.author == bot.user:
        return
    
    msg = message.content.lower()
    
    # –¢—Ä–∏–≥–≥–µ—Ä—ã –¥–ª—è –ò–ò
    triggers = ['–≤–∏–Ω–¥–æ–≤—Å–≥–µ—Ä–ª', 'windowsgirl', '–≤–≥', 'wg']
    
    for trigger in triggers:
        if trigger in msg:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            question = re.sub(r'–≤–∏–Ω–¥–æ–≤—Å–≥–µ—Ä–ª|windowsgirl|–≤–≥|wg', '', message.content, flags=re.IGNORECASE).strip()
            
            async with message.channel.typing():
                # –ü–∞—É–∑–∞ –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
                thinking_time = min(2.0, max(0.5, len(question) / 20))
                await asyncio.sleep(thinking_time)
                
                if question:
                    response = await cohere_ai.generate_response(question, str(message.author.id))
                else:
                    response = await cohere_ai.generate_response("–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?", str(message.author.id))
                
                await message.channel.send(response)
            return
    
    await bot.process_commands(message)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
@bot.command(name='clear')
async def clear_history(ctx):
    """–û—á–∏—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Ä–∞–∑–≥–æ–≤–æ—Ä–∞"""
    user_id = str(ctx.author.id)
    if user_id in cohere_ai.chat_history:
        cohere_ai.chat_history[user_id] = []
        await ctx.send("üóëÔ∏è –ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –æ—á–∏—â–µ–Ω–∞! –ù–∞—á–Ω–µ–º —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞!")
    else:
        await ctx.send("‚ÑπÔ∏è –£ —Ç–µ–±—è –µ—â–µ –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞!")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ API
@bot.command(name='status')
async def status(ctx):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å Cohere API"""
    if COHERE_ENABLED:
        await ctx.send("‚úÖ Cohere API –∞–∫—Ç–∏–≤–µ–Ω! –Ø –≥–æ—Ç–æ–≤–∞ –∫ –æ–±—â–µ–Ω–∏—é! üí´")
    else:
        await ctx.send("‚ùå Cohere API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API –∫–ª—é—á–∞.")

print("üöÄ –ó–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞ —Å Cohere AI...")
if COHERE_ENABLED:
    print("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Cohere Command R Plus")
else:
    print("‚ùå Cohere API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫–∞–º–∏")
    
bot.run(BOT_TOKEN)